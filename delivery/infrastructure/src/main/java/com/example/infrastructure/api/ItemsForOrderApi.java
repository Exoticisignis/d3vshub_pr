/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.infrastructure.api;

import com.example.infrastructure.models.Error;
import com.example.infrastructure.models.Item;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-05-16T17:35:02.597539500+02:00[Europe/Warsaw]")
@Validated
@Api(value = "itemsForOrder", description = "the itemsForOrder API")
public interface ItemsForOrderApi {

    default ItemsForOrderApiDelegate getDelegate() {
        return new ItemsForOrderApiDelegate() {};
    }

    /**
     * GET /itemsForOrder/{orderId} : List all items for an order
     *
     * @param orderId  (required)
     * @return A list of items for an order. (status code 200)
     *         or unexpected error (status code 400)
     */
    @ApiOperation(value = "List all items for an order", nickname = "itemsForOrderOrderIdGet", notes = "", response = Item.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of items for an order.", response = Item.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "unexpected error", response = Error.class) })
    @GetMapping(
        value = "/itemsForOrder/{orderId}",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Item>> itemsForOrderOrderIdGet(@ApiParam(value = "",required=true) @PathVariable("orderId") Integer orderId) {
        return getDelegate().itemsForOrderOrderIdGet(orderId);
    }

}
